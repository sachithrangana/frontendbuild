{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customers/customer-card/customer-card.component.css","webpack:///./src/app/customers/customer-card/customer-card.component.html","webpack:///./src/app/customers/customer-card/customer-card.component.ts","webpack:///./src/app/customers/customer-detailed/customer-detailed.component.css","webpack:///./src/app/customers/customer-detailed/customer-detailed.component.html","webpack:///./src/app/customers/customer-detailed/customer-detailed.component.ts","webpack:///./src/app/customers/customer-edit/customer-edit.component.css","webpack:///./src/app/customers/customer-edit/customer-edit.component.html","webpack:///./src/app/customers/customer-edit/customer-edit.component.ts","webpack:///./src/app/customers/customer-list/customer-list.component.css","webpack:///./src/app/customers/customer-list/customer-list.component.html","webpack:///./src/app/customers/customer-list/customer-list.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    console.log('You need to be logged in to access this');\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n @Injectable()\n export class AuthService {\n    userToken: any;\n    baseUrl = 'http://localhost:5000/api/auth/';\n    constructor(private http: Http) {}\n\n\n    login(model: any) {\n        return this.http.post(this.baseUrl.concat('login'), model, this.requestOptions()).pipe(map((response: Response) => {\n            const user = response.json();\n            if (user) {\n                localStorage.setItem('token', user.tokenString);\n                this.userToken = user.tokenSting;\n            }\n        }));\n    }\n    register(model: any) {\n        const headers = new Headers({'Content-type': 'application/json'});\n        return this.http.post(this.baseUrl.concat('register'), model, this.requestOptions());\n    }\n    loggedIn() {\n        const token = localStorage.getItem('token');\n        return !!token;\n    }\n    requestOptions() {\n        const headers = new Headers({'Content-type': 'application/json'});\n        const options = new RequestOptions({headers: headers});\n        return options;\n    }\n\n    private handleError(error: any) {\n        const applicationError = error.headers.get('Application-Error');\n        if (applicationError) {\n            return Observable.throw(applicationError);\n        }\n        const serverError = error.json();\n        let modelStateErrors = '';\n        if (serverError) {\n            for (const key in serverError) {\n                if (serverError.hasOwnProperty(key)) {\n                    modelStateErrors += serverError[key] + '\\n';\n                }\n            }\n        }\n        return Observable.throw(\n            modelStateErrors || 'Server error'\n        );\n    }\n }\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Http, RequestOptions, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/User';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    baseUrl = 'http://localhost:5000/api/';\r\n\r\n    constructor(private http: Http) {}\r\n\r\n    getUsers(): Observable<User[]> {\r\n         return this.http.get(this.baseUrl + 'users', this.jwt()).pipe(map((response) => <User[]>response.json()));\r\n    }\r\n\r\n    getUser(id): Observable<User> {\r\n        return this.http.get(this.baseUrl + 'users/' + id, this.jwt()).pipe(map((response) => <User>response.json()));\r\n   }\r\n    private jwt() {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const headers = new Headers({'Authorization': 'Bearer ' + token});\r\n            headers.append('Content-type', 'application/json');\r\n            return new RequestOptions({headers: headers});\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { HttpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthService } from './_services/auth.service';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport {HttpClientModule} from '@angular/common/http';\nimport { UserService } from './_services/user.service';\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\nimport { CustomerCardComponent } from './customers/customer-card/customer-card.component';\nimport { CustomerDetailedComponent } from './customers/customer-detailed/customer-detailed.component';\nimport { CustomerEditComponent } from './customers/customer-edit/customer-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    CustomerListComponent,\n    CustomerCardComponent,\n    CustomerDetailedComponent,\n    CustomerEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".placeholder-img {\\r\\n    width: 130px;\\r\\n    height: 140px;\\r\\n}\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"panel-image\\\">\\n      <img *ngIf=\\\"user.photoUrl\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\" />\\n      <img *ngIf=\\\"!user.photoUrl\\\" class=\\\"placeholder-img\\\" src=\\\"{{placeHolderUrl}}\\\" alt=\\\"{{user.knownAs}}\\\" />\\n      <ul class=\\\"list-inline member-icons\\\" animate>\\n        <li><button class=\\\"bt btn-primary\\\" [routerLink]=\\\"['/customers/', user.id]\\\" routerLinkActive=\\\"router-link-active\\\" ><i class=\\\"fa fa-user\\\"></i></button></li>\\n      </ul>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n        <h5><i class=\\\"fa fa-user\\\"></i> {{user.knownAs}} : {{user.age}}</h5>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n        <h5><small> {{user.city}}</small></h5>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { User } from '../../_models/User';\n\n@Component({\n    selector: 'app-customer-card',\n    templateUrl: './customer-card.component.html',\n    styleUrls: ['./customer-card.component.css']\n})\nexport class CustomerCardComponent implements OnInit {\n    placeHolderUrl = './../../../assets/user.png';\n    @Input() user: User;\n    constructor() { }\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  {{\\n    user | json\\n  }}\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { User } from '../../_models/User';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-customer-detailed',\n    templateUrl: './customer-detailed.component.html',\n    styleUrls: ['./customer-detailed.component.css']\n})\nexport class CustomerDetailedComponent implements OnInit {\n    constructor(private userService: UserService, private route: ActivatedRoute) { }\n    user: User;\n    ngOnInit() {\n        this.loadCustomer();\n    }\n    loadCustomer() {\n        this.userService.getUser(this.route.snapshot.params['id']).subscribe((user: User) => {\n            this.user = user;\n        }, (error) => {\n            alert(error);\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md3 col-sm-6\\\">{{user.knownAs}}\\n        <app-customer-card [user]=\\\"user\\\"></app-customer-card>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { User } from '../../_models/User';\n\n@Component({\n    selector: 'app-customer-edit',\n    templateUrl: './customer-edit.component.html',\n    styleUrls: ['./customer-edit.component.css']\n})\nexport class CustomerEditComponent implements OnInit {\n    users: User[];\n    constructor(private userService: UserService) { }\n    ngOnInit() {\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md3 col-sm-6\\\">{{user.knownAs}}\\n        <app-customer-card [user]=\\\"user\\\"></app-customer-card>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { User } from '../../_models/User';\n\n@Component({\n    selector: 'app-customer-list',\n    templateUrl: './customer-list.component.html',\n    styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n    users: User[];\n    constructor(private userService: UserService) { }\n    ngOnInit() {\n        this.loadCustomers();\n    }\n\n    loadCustomers() {\n        this.userService.getUsers().subscribe((users: User[]) => {\n            this.users = users;\n        }, error => {\n            alert(error);\n        });\n    }\n}\n","module.exports = \".register-toggle-button{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<app-customer-list></app-customer-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    model: any = {};\n    registerMode = false;\n    constructor(private http: Http) { }\n    ngOnInit() {\n    }\n\n    registerToggle() {\n        this.registerMode = !this.registerMode;\n    }\n     cancelRegisterMode(registerMode: boolean) {\n        this.registerMode = registerMode;\n     }\n     loggedIn() {\n        const token = localStorage.getItem('token');\n        return !!token;\n    }\n}\n","module.exports = \".login-component{\\r\\n    margin: 15%\\r\\n}\"","module.exports = \"<form #loginForm=\\\"ngForm\\\" class=\\\"form-inline mt-2 mt-md-0\\\" (ngSubmit)=\\\"login()\\\" class=\\\"form-signin\\\">\\n  <div class=\\\"login-component\\\">\\n    <div class=\\\"text-center mb-4\\\">\\n      <h3>Sign In</h3>\\n    </div>\\n\\n    <div class=\\\"form-label-grouptext-center mb-4\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" required [(ngModel)]=\\\"model.username\\\" aria-label=\\\"Username\\\" />\\n    </div>\\n\\n    <div class=\\\"form-label-group\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" aria-label=\\\"Password\\\">\\n    </div>\\n\\n    <div class=\\\"checkbox mb-3\\\">\\n      <label>\\n        <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label>\\n    </div>\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Sign In</button>\\n    </div>\\n</form>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../_services/auth.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    model: any = {};\n    constructor(private authService: AuthService, private router: Router) { }\n    ngOnInit() {}\n\n    login() {\n        this.authService.login(this.model).subscribe(data => {\n            console.log('logged in successfully');\n        }, error => {\n            alert(error);\n        }, () => {\n            this.router.navigate(['/home']);\n        });\n    }\n    logout() {\n        this.authService.userToken = null;\n        localStorage.removeItem('token');\n        alert('logged out');\n        this.router.navigate(['/login']);\n    }\n\n    loggedIn() {\n        const token = localStorage.getItem('token');\n        return !!token;\n    }\n}\n","module.exports = \".app-name {\\r\\n    color: #16a085\\r\\n}\"","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark mb-4\\\">\\n        <span class=\\\"navbar-brand app-name\\\">Customer Manager</span>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">  \\n    \\n      <ul class=\\\"navbar-nav mr-auto\\\">   \\n        <li *ngIf=\\\"loggedIn()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\" href=\\\"#\\\">Home</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\" href=\\\"#\\\">Register</a>\\n        </li>\\n      </ul>\\n      <form *ngIf=\\\"loggedIn()\\\" class=\\\"form-inline mt-2 mt-md-0\\\">\\n        <div class=\\\"btn-group\\\" >\\n                <!-- <label style=\\\"color: #ffffff; margin-right: 10px\\\">Hey User</label> -->\\n                <button (click)=\\\"logout()\\\" class=\\\"btn btn-secondary\\\">Logout </button>\\n            </div>\\n      </form>\\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: './nav.component.html',\n    styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n    constructor(private authService: AuthService, private router: Router) { }\n    ngOnInit() {}\n\n    logout() {\n        this.authService.userToken = null;\n        localStorage.removeItem('token');\n        this.router.navigate(['login']);\n    }\n\n    loggedIn() {\n        const token = localStorage.getItem('token');\n        return !!token;\n    }\n}\n","module.exports = \".register-container{\\r\\n    /* margin: 15% */\\r\\n}\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngsubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center\\\">Registration</h2>\\n\\n  <hr>\\n<div class=\\\"form-control\\\">\\n  <!-- <label class=\\\"control-label\\\"></label> -->\\n  <label class=\\\"readio-inline\\\">\\n    <input type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\"/>Male\\n  </label>\\n  <label class=\\\"readio-inline\\\">\\n    <input type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\"/>Female\\n  </label>\\n</div>\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').errors && registerForm.get('username').touched}\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"model.username\\\" />\\n    <span class=\\\"help-block\\\" *ngIf=\\\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\\\">\\n      Username is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"knownAs\\\" placeholder=\\\"Known As\\\" [(ngModel)]=\\\"model.knownAs\\\" />\\n    <span class=\\\"help-block\\\" *ngIf=\\\"registerForm.get('knownAs').hasError('required') && registerForm.get('knownAs').touched\\\">\\n      Known as is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\">\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"dateOfBirth\\\" placeholder=\\\"Date of birth\\\" [(ngModel)]=\\\"model.dateOfBirth\\\" />\\n    <span class=\\\"help-block\\\" *ngIf=\\\"registerForm.get('dateOfBirth').hasError('required') && registerForm.get('dateOfBirth').touched\\\">\\n      Date of birth is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('city').errors && registerForm.get('city').touched}\\\">\\n    <input type=\\\"city\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"City\\\" [(ngModel)]=\\\"model.city\\\" />\\n    <span class=\\\"help-block\\\" *ngIf=\\\"registerForm.get('city').hasError('required') && registerForm.get('city').touched\\\">\\n      City is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('country').errors && registerForm.get('country').touched}\\\">\\n    <input type=\\\"country\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\" placeholder=\\\"country\\\" [(ngModel)]=\\\"model.country\\\" />\\n    <span class=\\\"help-block\\\" *ngIf=\\\"registerForm.get('country').hasError('required') && registerForm.get('city').touched\\\">\\n      City is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('password').errors && registerForm.get('password').touched}\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.password\\\"/>\\n    <span *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\">\\n      Password is Required\\n    </span>\\n    <span *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\">\\n      Password must be atleast 4 charactors\\n    </span>\\n    <span *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\">\\n      Password cannot exceed 8 charactors\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" required placeholder=\\\"Confirm Password\\\" [(ngModel)]=\\\"model.confirmPassword\\\"/>\\n    <span *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">\\n      Password is Required\\n    </span>\\n    <span *ngIf=\\\"registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')\\\">\\n      Confirm password mismatch password\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"register()\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\\n<p>value: {{ registerForm.value | json }}</p>\\n<p>status: {{ registerForm.status | json }}</p>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from '../_services/auth.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    model: any = {};\n    @Output() cancelRegister =  new EventEmitter();\n    registerForm: FormGroup;\n\n    constructor(private authService: AuthService, private fb: FormBuilder, private router: Router) { }\n\n    ngOnInit() {\n        // this.registerForm =  new FormGroup({\n        //     username: new FormControl('', Validators.required),\n        //     password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n        //     confirmPassword: new FormControl('', Validators.required)\n        // }, this.passwordMatchValidator);\n        this.createRegisterForm();\n    }\n    createRegisterForm() {\n        this.registerForm = this.fb.group({\n            gender: ['male'],\n            username: ['', Validators.required],\n            knownAs: ['', Validators.required],\n            dateOfBirth: [null, Validators.required],\n            city: ['', Validators.required],\n            country: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n            confirmPassword: ['', Validators.required]\n        }, { validator: this.passwordMatchValidator });\n    }\n    passwordMatchValidator(g: FormGroup) {\n        return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch' : true};\n    }\n\n    register() {\n        this.authService.register(this.registerForm.value).subscribe(() => {\n            alert('Registation Successfull');\n            this.router.navigate(['/home']);\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    cancel() {\n        this.cancelRegister.emit(false);\n        console.log('cancel');\n    }\n}\n","import { Routes } from './routes';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\r\nimport { CustomerDetailedComponent } from './customers/customer-detailed/customer-detailed.component';\r\n\r\nexport { Routes } from '@angular/router';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: 'login', component: LoginComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'register', component: RegisterComponent },\r\n            {path: 'home', component: HomeComponent},\r\n            {path: 'customers/:id', component: CustomerDetailedComponent},\r\n            {path: 'list', component: CustomerListComponent},\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: 'home', pathMatch: 'full'},\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl: 'http://localhost:5000/api/',\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}